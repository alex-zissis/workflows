name: Build and deploys a container to ECS
on:
    workflow_call:
        inputs:
            application-name:
                required: true
                type: string
            ecs-cluster:
                required: true
                type: string
            aws-region:
                default: ap-southeast-2
                type: string
                required: false
            image-tag:
                required: true
                type: string
            healthcheck-url:
                required: true
                type: string
            ecr-registry:
                required: true
                type: string

        secrets:
            aws-access-key-id:
                required: true
            aws-secret-access-key:
                required: true

jobs:
    deploy:
        name: Deploy to ECS
        runs-on: ubuntu-latest

        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.aws-access-key-id }}
                  aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
                  aws-region: ${{ inputs.aws-region }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Checkout
              uses: actions/checkout@v2

            - name: Build, tag, and push image to Amazon ECR
              uses: alex-zissis/workflows/.github/actions/build-and-push-container@develop
              id: build-image
              with:
                  image-tag: ${{ inputs.image-tag }}
                  application-name: ${{ inputs.application-name }}
                  ecr-registry: ${{ inputs.ecr-registry }}

            - name: Update service
              uses: alex-zissis/workflows/.github/actions/update-service@develop
              with:
                  ecs-cluster: ${{ inputs.ecs-cluster }}
                  application-name: ${{ inputs.application-name }}

            - name: Healthcheck
              uses: alex-zissis/workflows/.github/actions/perform-healthcheck@develop
              with:
                  sha: ${{ inputs.image-tag }}
                  healthcheck-url: ${{ inputs.healthcheck-url }}

            # - name: Cleanup unused images
            #   run: |
            #       export AWS_PAGER=cat
            #       arr=$(aws ecr describe-images --repository-name $APPLICATION_NAME --no-paginate | jq -r '.imageDetails |= sort_by(.imagePushedAt) | .imageDetails[0:-2] | .[].imageDigest')
            #       toDelete=$(node -e "console.log(process.argv[1].split('\n').filter(x => x.trim() !== '').map(x => 'imageDigest=' + x).join(' '))" "${arr[*]}")
            #       if [[ "$toDelete" -eq "" ]]; then
            #         echo "no old images to delete from ECS."
            #         exit 0
            #       fi

            #       echo "deleting: $toDelete"
            #       aws ecr --no-paginate batch-delete-image --repository-name $APPLICATION_NAME --image-ids $toDelete
